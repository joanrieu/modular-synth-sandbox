{"version":3,"sources":["SAudio.ts","SAutosave.ts","SButtonClicker.ts","SButtonRenderer.ts","SDeviceRenderer.ts","SDeviceSaver.ts","SDisplay.ts","SDragAndDrop.ts","SKnobManager.ts","SKnobRenderer.ts","SMidi.ts","CTransform.ts","SMouseInput.ts","SPointerGrabber.ts","SPortRenderer.ts","random.ts","SPrefabs.ts","SScopeRenderer.ts","STrash.ts","STrashcanRenderer.ts","SWireManager.ts","SWireRenderer.ts","ECS.ts","index.ts"],"names":[],"mappings":"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","file":"src.ab20e588.js","sourceRoot":"../src","sourcesContent":["import { ECS, Entity, SystemCallback } from \"./ECS\";\nimport { ISerializable } from \"./ISerializable\";\n\nexport type AudioDeviceId = Entity;\n\nexport type AudioNodeId<T extends AudioNode = AudioNode> = [\n  AudioDeviceId,\n  number\n] & { __type: T };\n\nexport type AudioPortId = [AudioNodeId, number];\n\nexport type AudioParamId = [AudioNodeId, string];\n\nexport type AudioConnectionId = [AudioPortId, AudioPortId | AudioParamId];\n\nfunction isPort(id: AudioPortId | AudioParamId): id is AudioPortId {\n  const [, portOrParam] = id;\n  return typeof portOrParam === \"number\";\n}\n\ntype SerializedAudioNodeType = string & { __type: \"SerializedAudioNodeType\" };\n\ntype SerializedAudioNodeMap = Array<\n  [AudioNodeId, [SerializedAudioNodeType, any]]\n>;\n\ntype SerializedAudioConnections = string[];\n\ntype SerializedAudio = [SerializedAudioNodeMap, SerializedAudioConnections];\n\nexport class RecorderNode extends MediaStreamAudioDestinationNode {\n  readonly recorder = new MediaRecorder(this.stream, {\n    mimeType: \";codecs=pcm\",\n  });\n\n  constructor(context: AudioContext, options?: AudioNodeOptions) {\n    super(context, options);\n    this.recorder.ondataavailable = this.onDataAvailable.bind(this);\n  }\n\n  private onDataAvailable(event: BlobEvent) {\n    // open the audio file with a small delay to prevent it from\n    // stealing focus (it causes us to miss the mouseup event)\n    setTimeout(() => window.open(URL.createObjectURL(event.data)), 100);\n  }\n}\n\nexport class SAudio implements ISerializable<SerializedAudio> {\n  constructor(private readonly ecs: ECS) {\n    const interval = setInterval(() => {\n      if (this.ctx.state === \"running\") {\n        clearInterval(interval);\n      } else {\n        this.ctx.resume();\n      }\n    }, 400);\n  }\n\n  ctx = new AudioContext();\n\n  private nodes = new Map<string, [AudioNode, Record<string, any>]>();\n  private nextNodeIndex = 1;\n  private connections = new Set<string>();\n\n  get sampleRate() {\n    return this.ctx.sampleRate;\n  }\n\n  createAudioDestinationNode(device: AudioDeviceId) {\n    const node = this.ctx.destination;\n    return this.createAudioNode(device, node);\n  }\n\n  createRecorderNode(device: AudioDeviceId, options?: AudioNodeOptions) {\n    const node = new RecorderNode(this.ctx, options);\n    return this.createAudioNode(device, node, options);\n  }\n\n  record(id: AudioNodeId<RecorderNode>, start: boolean) {\n    const { node } = this.getNode(id);\n    if (start) {\n      node.recorder.start();\n    } else {\n      node.recorder.stop();\n    }\n  }\n\n  createAudioBufferSourceNode(\n    device: AudioDeviceId,\n    options: {\n      createBuffer: SystemCallback<AudioBuffer>;\n    } & Omit<AudioBufferSourceOptions, \"buffer\">\n  ) {\n    const { createBuffer, ...nodeOptions } = options;\n    const node = new AudioBufferSourceNode(this.ctx, nodeOptions);\n    const buffer = this.ecs.invokeCallback(createBuffer);\n    Promise.resolve(buffer).then((buffer) => {\n      node.buffer = buffer;\n      node.start();\n    });\n    return this.createAudioNode(device, node, options);\n  }\n\n  createAnalyserNode(device: AudioDeviceId, options?: AnalyserOptions) {\n    const node = new AnalyserNode(this.ctx, options);\n    return this.createAudioNode(device, node, options);\n  }\n\n  getAnalyserFrequencyBinCount(nodeId: AudioNodeId<AnalyserNode>) {\n    return this.getNode(nodeId).node.frequencyBinCount;\n  }\n\n  getAnalyserFloatTimeDomainData(\n    nodeId: AudioNodeId<AnalyserNode>,\n    array: Float32Array\n  ) {\n    return this.getNode(nodeId).node.getFloatTimeDomainData(array);\n  }\n\n  createBiquadFilterNode(device: AudioDeviceId, options?: BiquadFilterOptions) {\n    const node = new BiquadFilterNode(this.ctx, options);\n    return this.createAudioNode(device, node, options);\n  }\n\n  createConstantSourceNode(\n    device: AudioDeviceId,\n    options?: ConstantSourceOptions\n  ) {\n    const node = new ConstantSourceNode(this.ctx, options);\n    node.start();\n    return this.createAudioNode(device, node, options);\n  }\n\n  createDelayNode(device: AudioDeviceId, options?: DelayOptions) {\n    const node = new DelayNode(this.ctx, options);\n    return this.createAudioNode(device, node, options);\n  }\n\n  createGainNode(device: AudioDeviceId, options?: GainOptions) {\n    const node = new GainNode(this.ctx, options);\n    return this.createAudioNode(device, node, options);\n  }\n\n  createOscillatorNode(device: AudioDeviceId, options?: OscillatorOptions) {\n    const node = new OscillatorNode(this.ctx, options);\n    node.start();\n    return this.createAudioNode(device, node, options);\n  }\n\n  getOscillatorType(nodeId: AudioNodeId<OscillatorNode>) {\n    return this.getNode(nodeId).node.type;\n  }\n\n  setOscillatorType(nodeId: AudioNodeId<OscillatorNode>, type: OscillatorType) {\n    const { node, options } = this.getNode(nodeId);\n    node.type = type;\n    options.type = type;\n  }\n\n  createStereoPannerNode(device: AudioDeviceId, options?: StereoPannerOptions) {\n    const node = new StereoPannerNode(this.ctx, options);\n    return this.createAudioNode(device, node, options);\n  }\n\n  createConvolverNode(\n    device: AudioDeviceId,\n    createBuffer: SystemCallback<AudioBuffer>\n  ) {\n    const node = new ConvolverNode(this.ctx);\n    const buffer = this.ecs.invokeCallback(createBuffer);\n    Promise.resolve(buffer).then((buffer) => (node.buffer = buffer));\n    return this.createAudioNode(device, node, createBuffer);\n  }\n\n  connect(connectionId: AudioConnectionId, connect = true) {\n    const [srcPortId, dstPortOrParamId] = connectionId;\n\n    const [srcId, srcPort] = srcPortId;\n    const [dstId] = dstPortOrParamId;\n\n    const srcNode = this.getNode(srcId).node;\n    const dstNode = this.getNode(dstId).node;\n\n    if (isPort(dstPortOrParamId)) {\n      const [, dstPort] = dstPortOrParamId;\n      if (connect) {\n        srcNode.connect(dstNode, srcPort, dstPort);\n      } else {\n        srcNode.disconnect(dstNode, srcPort, dstPort);\n      }\n    } else {\n      const dstParam = this.getParam(dstPortOrParamId);\n      if (connect) {\n        srcNode.connect(dstParam, srcPort);\n      } else {\n        srcNode.disconnect(dstParam, srcPort);\n      }\n    }\n\n    const connection = JSON.stringify([srcPortId, dstPortOrParamId]);\n    if (connect) {\n      this.connections.add(connection);\n    } else {\n      this.connections.delete(connection);\n    }\n  }\n\n  private createAudioNode<T extends AudioNode>(\n    device: Entity,\n    node: T,\n    options: Record<string, any> = {}\n  ) {\n    const id = [device, this.nextNodeIndex++] as AudioNodeId<T>;\n    this.nodes.set(JSON.stringify(id), [node, options]);\n    return id;\n  }\n\n  private getNode<T extends AudioNode>(nodeId: AudioNodeId<T>) {\n    const [node, options] = this.nodes.get(JSON.stringify(nodeId))!;\n    return { node: node as T, options };\n  }\n\n  private getParam([nodeId, paramName]: AudioParamId) {\n    const { node } = this.getNode(nodeId);\n    const key = paramName as keyof AudioNode;\n    const param = node[key];\n    if (!(param instanceof AudioParam))\n      throw new Error(\"invalid param name: \" + paramName);\n    return param;\n  }\n\n  getParamValue(paramId: AudioParamId) {\n    return this.getParam(paramId).value;\n  }\n\n  setParamValue(paramId: AudioParamId, value: number) {\n    const [nodeId, paramName] = paramId;\n    this.getParam(paramId).value = value;\n    this.getNode(nodeId).options[paramName] = value;\n  }\n\n  deleteDevice(entity: Entity) {\n    for (const id of this.connections) {\n      const connectionId = JSON.parse(id) as AudioConnectionId;\n      const [[[srcEntity]], [[dstEntity]]] = connectionId;\n      if (srcEntity === entity || dstEntity === entity) {\n        this.connect(connectionId, false);\n      }\n    }\n\n    for (const id of this.nodes.keys()) {\n      const [device] = JSON.parse(id) as AudioNodeId;\n      if (device === entity) {\n        this.nodes.delete(id);\n      }\n    }\n  }\n\n  save(): SerializedAudio {\n    return [\n      [...this.nodes].map(([id, [node, options]]) => {\n        const ctor = node.constructor.name as SerializedAudioNodeType;\n        return [JSON.parse(id), [ctor, options]];\n      }),\n      [...this.connections],\n    ];\n  }\n\n  restore([nodes, connections]: SerializedAudio) {\n    for (const [[device, node], [ctor, options]] of nodes) {\n      this.nextNodeIndex = node;\n      const create = (\"create\" + ctor) as keyof this;\n      ((this[create] as unknown) as Function)(device, options);\n    }\n\n    for (const connection of connections) {\n      this.connect(JSON.parse(connection));\n    }\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { ISerializable } from \"./ISerializable\";\n\nexport class SAutosave {\n  constructor(readonly ecs: ECS) {\n    setTimeout(this.restoreAll.bind(this));\n    setInterval(this.saveAll.bind(this), 1000);\n  }\n\n  restoreAll() {\n    const str = localStorage.getItem(\"save\");\n    if (!str) return;\n\n    const save = JSON.parse(str);\n\n    Object.entries(save).map(([name, system]) =>\n      (this.ecs[name as keyof ECS] as ISerializable<any>).restore(system)\n    );\n  }\n\n  saveAll() {\n    const save = Object.entries(this.ecs).reduce(\n      (acc, [name, system]) =>\n        \"save\" in system && \"restore\" in system\n          ? { ...acc, [name]: (system as ISerializable<any>).save() }\n          : acc,\n      {}\n    );\n\n    const str = JSON.stringify(save);\n\n    localStorage.setItem(\"save\", str);\n  }\n}\n","import { ECS, Entity } from \"./ECS\";\nimport { IUpdatable } from \"./IUpdatable\";\n\nexport class SButtonClicker implements IUpdatable {\n  constructor(readonly ecs: ECS) {}\n\n  held = new Set<Entity>();\n\n  update() {\n    for (const [entity, button] of this.ecs.buttons) {\n      const grabTarget = this.ecs.pointerGrabTargets.get(entity)!;\n      if (grabTarget.grabbed && !this.held.has(entity)) {\n        this.held.add(entity);\n        if (button.toggle) {\n          button.down = !button.down;\n        } else {\n          button.down = true;\n        }\n        this.ecs.invokeCallback(button.onClick);\n      } else if (!grabTarget.grabbed && this.held.has(entity)) {\n        this.held.delete(entity);\n        if (!button.toggle) {\n          button.down = false;\n        }\n      }\n    }\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { IRenderable } from \"./IRenderable\";\n\nexport class SButtonRenderer implements IRenderable {\n  constructor(readonly ecs: ECS) {}\n\n  render() {\n    const ctx = this.ecs.display.ctx;\n    ctx.lineWidth = 2;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.font = \"10px monospace\";\n\n    for (const [entity, button] of this.ecs.buttons) {\n      const { x, y, w, h } = this.ecs.display.getWorldTransform(entity);\n\n      ctx.strokeStyle = \"grey\";\n      ctx.strokeRect(x, y, w, h);\n\n      ctx.fillStyle = button.down ? \"grey\" : \"#222\";\n      ctx.fillRect(x, y, w, h);\n\n      ctx.fillStyle = \"white\";\n      ctx.fillText(button.label, x + w / 2, y + h / 2);\n    }\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { IRenderable } from \"./IRenderable\";\n\nexport class SDeviceRenderer implements IRenderable {\n  constructor(readonly ecs: ECS) {}\n\n  render() {\n    const ctx = this.ecs.display.ctx;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"top\";\n    ctx.font = \"bold 15px monospace\";\n    ctx.lineWidth = 2;\n    for (const [entity, device] of this.ecs.devices) {\n      const { x, y, w, h } = this.ecs.display.getWorldTransform(entity);\n\n      ctx.strokeStyle = \"grey\";\n      ctx.strokeRect(x, y, w, h);\n\n      if (!this.ecs.scopes.has(entity)) {\n        ctx.fillStyle = \"#222\";\n        ctx.fillRect(x, y, w, h);\n      }\n\n      ctx.fillStyle = \"white\";\n      ctx.fillText(device.name, x + w / 2, y + 10, w - 20);\n    }\n  }\n}\n","import { ECS, Entity, EntityComponentMap, EntitySet } from \"./ECS\";\nimport { ISerializable } from \"./ISerializable\";\n\ntype SerializedUI = Array<[string, Array<Entity> | Array<[Entity, any]>]>;\n\nexport class SDeviceSaver implements ISerializable<SerializedUI> {\n  constructor(readonly ecs: ECS) {}\n\n  save() {\n    const {\n      buttons,\n      dragAndDropTargets,\n      devices,\n      knobs,\n      knobDragZones,\n      pointerGrabTargets,\n      ports,\n      scopes,\n      transforms,\n      wires,\n    } = this.ecs;\n\n    const entities = [...devices.keys()];\n    for (const parent of entities) {\n      for (const [child, transform] of transforms) {\n        if (transform.parent === parent) {\n          entities.push(child);\n        }\n      }\n    }\n\n    return Object.entries({\n      buttons,\n      devices,\n      dragAndDropTargets,\n      knobs,\n      knobDragZones,\n      pointerGrabTargets,\n      ports,\n      scopes,\n      transforms,\n      wires,\n    }).map(([name, system]) => [\n      name,\n      [...system].filter(\n        (entry) =>\n          entities.includes(Array.isArray(entry) ? entry[0] : entry) ||\n          name === \"wires\"\n      ),\n    ]) as SerializedUI;\n  }\n\n  restore(save: SerializedUI) {\n    for (const [k, v] of save) {\n      const key = k as keyof ECS;\n      if (this.ecs[key] instanceof EntitySet) {\n        const set = this.ecs[key] as EntitySet;\n        for (const entity of v as Array<Entity>) set.add(entity);\n      } else if (this.ecs[key] instanceof EntityComponentMap) {\n        const map = this.ecs[key] as EntityComponentMap<any>;\n        for (const [entity, component] of v as Array<[Entity, any]>)\n          map.set(entity, component);\n      }\n    }\n  }\n}\n","import { ECS, Entity } from \"./ECS\";\nimport { IRenderable } from \"./IRenderable\";\nimport { IUpdatable } from \"./IUpdatable\";\n\nexport class SDisplay {\n  canvas = document.createElement(\"canvas\");\n  ctx = this.canvas.getContext(\"2d\")!;\n\n  constructor(readonly ecs: ECS) {\n    document.body.appendChild(this.canvas);\n    window.addEventListener(\"resize\", this.resize);\n    this.resize();\n    requestAnimationFrame(this.loop);\n  }\n\n  resize = () => {\n    this.canvas.width = document.body.clientWidth;\n    this.canvas.height = document.body.clientHeight;\n  };\n\n  loop = () => {\n    this.update();\n    this.render();\n    requestAnimationFrame(this.loop);\n  };\n\n  update() {\n    for (const system of Object.values(this.ecs)) {\n      if (\"update\" in system && system !== this) {\n        (system as IUpdatable).update();\n      }\n    }\n  }\n\n  render() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    this.ctx.textAlign = \"center\";\n    this.ctx.textBaseline = \"middle\";\n    this.ctx.font = ((this.canvas.height / 8) | 0) + \"px monospace\";\n    this.ctx.fillStyle = \"hsla(0, 0%, 0%)\";\n    this.ctx.fillText(\n      \"Modular\",\n      this.canvas.width / 2,\n      (this.canvas.height * 2) / 6\n    );\n    this.ctx.fillText(\n      \"Synth\",\n      this.canvas.width / 2,\n      (this.canvas.height * 3) / 6\n    );\n    this.ctx.fillText(\n      \"Sandbox\",\n      this.canvas.width / 2,\n      (this.canvas.height * 4) / 6\n    );\n\n    for (const system of Object.values(this.ecs)) {\n      if (\"render\" in system && system !== this) {\n        (system as IRenderable).render();\n      }\n    }\n  }\n\n  getWorldTransform(entity: Entity) {\n    const transform = { ...this.ecs.transforms.get(entity)! };\n    if (transform.parent) {\n      const parent = this.getWorldTransform(transform.parent);\n      transform.x += parent.x;\n      transform.y += parent.y;\n    }\n    return transform;\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { IUpdatable } from \"./IUpdatable\";\n\nexport class SDragAndDrop implements IUpdatable {\n  constructor(readonly ecs: ECS) {}\n\n  update() {\n    for (const entity of this.ecs.dragAndDropTargets) {\n      const grabTarget = this.ecs.pointerGrabTargets.get(entity)!;\n      if (grabTarget.grabbed) {\n        const pointerTransform = this.ecs.transforms.get(\n          grabTarget.grabbed.pointer\n        )!;\n        const transform = this.ecs.transforms.get(entity)!;\n        transform.x = pointerTransform.x + grabTarget.grabbed.dx;\n        transform.y = pointerTransform.y + grabTarget.grabbed.dy;\n      }\n    }\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { IUpdatable } from \"./IUpdatable\";\n\nexport class SKnobManager implements IUpdatable {\n  constructor(readonly ecs: ECS) {}\n\n  update() {\n    for (const [entity, knob] of this.ecs.knobs) {\n      const target = this.ecs.pointerGrabTargets.get(entity)!;\n      if (target.grabbed) {\n        const dragZone = this.ecs.knobDragZones.get(entity);\n        const { y } = this.ecs.display.getWorldTransform(\n          target.grabbed.pointer\n        );\n\n        const op = (x: number) => (knob.max > 1000 ? Math.log10(x) : x);\n        const opInv = (x: number) => (knob.max > 1000 ? 10 ** x : x);\n        if (dragZone) {\n          let percent = (y - dragZone.minY) / (dragZone.maxY - dragZone.minY);\n          percent = Math.max(0, Math.min(1, percent));\n\n          this.ecs.audio.setParamValue(\n            knob.param,\n            knob.min + opInv(percent * op(knob.max - knob.min))\n          );\n        } else {\n          let percent =\n            op(this.ecs.audio.getParamValue(knob.param) - knob.min) /\n            op(knob.max - knob.min);\n          percent = Math.max(0, Math.min(1, percent));\n\n          const scale = 200;\n          const minY = y + percent * scale;\n          const maxY = minY - scale;\n\n          this.ecs.knobDragZones.set(entity, { minY, maxY });\n        }\n      } else {\n        this.ecs.knobDragZones.delete(entity);\n      }\n    }\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { IRenderable } from \"./IRenderable\";\n\nexport class SKnobRenderer implements IRenderable {\n  constructor(readonly ecs: ECS) {}\n\n  render() {\n    const ctx = this.ecs.display.ctx;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.font = \"10px monospace\";\n\n    const valueToAngle = (value: number) =>\n      Math.PI * (value * 2 - 1) * 0.7 - Math.PI / 2;\n    const minAngle = valueToAngle(0);\n    const maxAngle = valueToAngle(1);\n\n    for (const [entity, knob] of this.ecs.knobs) {\n      const { x, y, w, h } = this.ecs.display.getWorldTransform(entity);\n      const r = Math.min(w, h) / 2;\n\n      const op = (x: number) => (knob.max > 1000 ? Math.log10(x) : x);\n      let value =\n        op(this.ecs.audio.getParamValue(knob.param) - knob.min) /\n        op(knob.max - knob.min);\n      value = Math.max(0, Math.min(1, value));\n      const valueAngle = valueToAngle(value);\n\n      ctx.strokeStyle = ctx.fillStyle =\n        \"hsl(180, \" +\n        ((value * 100) | 0) +\n        \"%, \" +\n        ((50 + value * 30) | 0) +\n        \"%)\";\n\n      ctx.lineWidth = 1;\n      ctx.beginPath();\n      ctx.arc(x + r, y + r, r, minAngle, maxAngle);\n      ctx.stroke();\n\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.arc(x + r, y + r, r, minAngle, valueAngle);\n      ctx.stroke();\n\n      ctx.fillText(knob.name, x + r, y + r);\n\n      const grabTarget = this.ecs.pointerGrabTargets.get(entity)!;\n      if (grabTarget.grabbed) {\n        const { x, y } = this.ecs.display.getWorldTransform(\n          grabTarget.grabbed.pointer\n        );\n        const d = 30;\n\n        ctx.fillStyle = \"white\";\n        ctx.fillText(\n          this.ecs.audio.getParamValue(knob.param).toFixed(2),\n          x + d,\n          y + d\n        );\n      }\n    }\n  }\n}\n","import { ECS, Entity } from \"./ECS\";\nimport { ISerializable } from \"./ISerializable\";\nimport { AudioDeviceId, AudioNodeId } from \"./SAudio\";\n\nenum MidiB0 {\n  NOTE_ON = 144,\n  NOTE_OFF = 128,\n}\n\ntype SerializedMidiNodes = [\n  AudioNodeId<ConstantSourceNode>[],\n  AudioNodeId<ConstantSourceNode>[]\n];\n\nfunction isMidiInput(port: WebMidi.MIDIPort): port is WebMidi.MIDIInput {\n  return port.type === \"input\";\n}\n\nexport class SMidi implements ISerializable<SerializedMidiNodes> {\n  constructor(readonly ecs: ECS) {\n    this.onMidiMessage = this.onMidiMessage.bind(this);\n    navigator.requestMIDIAccess?.().then((midi) => {\n      for (const port of midi.inputs.values()) {\n        port.addEventListener(\"midimessage\", this.onMidiMessage);\n      }\n      midi.addEventListener(\"statechange\", (event) => {\n        if (event.port.state === \"connected\" && isMidiInput(event.port)) {\n          event.port.addEventListener(\"midimessage\", this.onMidiMessage);\n        }\n      });\n    });\n  }\n\n  lastNote = 0;\n  gateNodes = new Set<AudioNodeId<ConstantSourceNode>>();\n  cvNodes = new Set<AudioNodeId<ConstantSourceNode>>();\n\n  createGateNode(device: AudioDeviceId) {\n    const node = this.ecs.audio.createConstantSourceNode(device);\n    this.gateNodes.add(node);\n    return node;\n  }\n\n  createCVNode(device: AudioDeviceId) {\n    const node = this.ecs.audio.createConstantSourceNode(device);\n    this.cvNodes.add(node);\n    return node;\n  }\n\n  onMidiMessage(event: WebMidi.MIDIMessageEvent) {\n    for (const gateNode of this.gateNodes) {\n      for (const cvNode of this.cvNodes) {\n        const [command, note, velocity] = event.data;\n        if (command === MidiB0.NOTE_ON && velocity > 0) {\n          this.ecs.audio.setParamValue([cvNode, \"offset\"], this.noteToCV(note));\n          this.ecs.audio.setParamValue([gateNode, \"offset\"], 1);\n          this.lastNote = note;\n        } else if (\n          command === MidiB0.NOTE_OFF ||\n          (command === MidiB0.NOTE_ON && velocity === 0)\n        ) {\n          if (note === this.lastNote) {\n            this.ecs.audio.setParamValue([gateNode, \"offset\"], 0);\n          }\n        }\n      }\n    }\n  }\n\n  noteToCV(note: number) {\n    return 2 ** ((note - 33) / 12);\n  }\n\n  deleteDevice(entity: Entity) {\n    for (const node of this.gateNodes) {\n      if (node[0] === entity) {\n        this.gateNodes.delete(node);\n      }\n    }\n\n    for (const node of this.cvNodes) {\n      if (node[0] === entity) {\n        this.cvNodes.delete(node);\n      }\n    }\n  }\n\n  save(): SerializedMidiNodes {\n    return [[...this.gateNodes], [...this.cvNodes]];\n  }\n\n  restore([gateNodes, cvNodes]: SerializedMidiNodes) {\n    this.gateNodes = new Set(gateNodes);\n    this.cvNodes = new Set(cvNodes);\n  }\n}\n","import { Entity } from \"./ECS\";\n\nexport interface CTransform {\n  parent?: Entity;\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport function intersection(point: CTransform, rect: CTransform) {\n  return (\n    point.x >= rect.x &&\n    point.y >= rect.y &&\n    point.x < rect.x + rect.w &&\n    point.y < rect.y + rect.h\n  );\n}\n","import { CPointer } from \"./CPointer\";\nimport { CTransform, intersection } from \"./CTransform\";\nimport { ECS, Entity } from \"./ECS\";\n\nexport class SMouseInput {\n  mouse = this.ecs.createEntity(\"mouse\");\n  transform: CTransform = { x: 0, y: 0, w: 1, h: 1 };\n  pointer: CPointer = { pressed: false };\n\n  constructor(readonly ecs: ECS) {\n    ecs.transforms.set(this.mouse, this.transform);\n    ecs.pointers.set(this.mouse, this.pointer);\n    ecs.display.canvas.addEventListener(\"mousedown\", this.onMouseDown);\n    ecs.display.canvas.addEventListener(\"mouseup\", this.onMouseUp);\n    ecs.display.canvas.addEventListener(\"mousemove\", this.onMouseMove);\n  }\n\n  onMouseDown = (e: MouseEvent): void => {\n    this.pointer.pressed = true;\n  };\n\n  onMouseUp = () => {\n    this.pointer.pressed = false;\n  };\n\n  onMouseMove = (e: MouseEvent) => {\n    this.transform.x = e.clientX;\n    this.transform.y = e.clientY;\n    this.pointer.target = this.findTargetEntity(this.transform);\n  };\n\n  findTargetEntity(\n    pointerTransform: CTransform,\n    parent?: Entity\n  ): Entity | undefined {\n    for (const targetEntity of this.ecs.pointerGrabTargets.keys()) {\n      const targetTransform = this.ecs.display.getWorldTransform(targetEntity);\n      if (\n        targetTransform.parent === parent &&\n        intersection(this.transform, targetTransform)\n      ) {\n        return this.findTargetEntity(pointerTransform, targetEntity);\n      }\n    }\n    return parent;\n  }\n}\n","import { ECS, Entity } from \"./ECS\";\nimport { IUpdatable } from \"./IUpdatable\";\n\nexport class SPointerGrabber implements IUpdatable {\n  constructor(readonly ecs: ECS) {}\n\n  dummyGrabTargets = new Set<Entity>();\n\n  update() {\n    const freePointers = new Map(this.ecs.pointers);\n    const freeTargets = new Set(this.ecs.pointerGrabTargets.keys());\n\n    for (const [grabbedEntity, grabTarget] of this.ecs.pointerGrabTargets) {\n      if (grabTarget.grabbed) {\n        const { pressed } = this.ecs.pointers.get(grabTarget.grabbed.pointer)!;\n        if (pressed) {\n          freePointers.delete(grabTarget.grabbed.pointer);\n          freeTargets.delete(grabbedEntity);\n        } else {\n          delete grabTarget.grabbed;\n          if (this.dummyGrabTargets.has(grabbedEntity)) {\n            this.dummyGrabTargets.delete(grabbedEntity);\n            this.ecs.pointerGrabTargets.delete(grabbedEntity);\n          }\n        }\n      }\n    }\n\n    for (const [pointer, { target, pressed }] of freePointers) {\n      if (pressed && target && freeTargets.has(target)) {\n        const pointerTransform = this.ecs.transforms.get(pointer)!;\n        const grabbedTransform = this.ecs.transforms.get(target)!;\n        const dx = grabbedTransform.x - pointerTransform.x;\n        const dy = grabbedTransform.y - pointerTransform.y;\n        this.ecs.pointerGrabTargets.get(target)!.grabbed = { pointer, dx, dy };\n      } else if (pressed) {\n        this.cancelGrab(pointer);\n      }\n    }\n  }\n\n  cancelGrab(pointer: Entity) {\n    const dummy = this.ecs.createEntity(\"cancelled-grab-target\");\n    this.dummyGrabTargets.add(dummy);\n    this.ecs.pointerGrabTargets.set(dummy, {\n      grabbed: {\n        pointer,\n        dx: 0,\n        dy: 0,\n      },\n    });\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { IRenderable } from \"./IRenderable\";\n\nexport class SPortRenderer implements IRenderable {\n  constructor(readonly ecs: ECS) {}\n\n  render() {\n    const ctx = this.ecs.display.ctx;\n    ctx.textAlign = \"center\";\n    ctx.textBaseline = \"middle\";\n    ctx.font = \"10px monospace\";\n    ctx.lineWidth = 1;\n\n    const connectedPorts = new Set(\n      [...this.ecs.wires.values()].flatMap((wire) => [\n        wire.source,\n        wire.destination,\n      ])\n    );\n\n    for (const [entity, port] of this.ecs.ports) {\n      const { x, y, w, h } = this.ecs.display.getWorldTransform(entity);\n      const r = Math.min(w, h) / 2;\n\n      const on = connectedPorts.has(entity);\n      ctx.strokeStyle = ctx.fillStyle = on ? \"white\" : \"grey\";\n\n      ctx.beginPath();\n      ctx.arc(x + r, y + r, r, -Math.PI, Math.PI);\n      ctx.stroke();\n\n      ctx.fillText(port.name, x + r, y + r);\n    }\n  }\n}\n","// Middle Square Weyl Sequence PRNG\n// https://en.wikipedia.org/wiki/Middle-square_method#Middle_Square_Weyl_Sequence_PRNG\n\nfunction uint64(x: bigint) {\n  return BigInt.asUintN(64, x);\n}\n\nfunction uint32(x: bigint) {\n  return BigInt.asUintN(32, x);\n}\n\nfunction uint32_to_float(x: bigint) {\n  return Number(x) / 2 ** 32;\n}\n\nexport function* msws(\n  seed = 0xb5ad4eceda1ce2a9n\n): Generator<number, never, never> {\n  let rnd = 0n;\n  let weyl = 0n;\n\n  for (;;) {\n    weyl = uint64(weyl + seed);\n    rnd = uint64(uint64(rnd * rnd) + weyl);\n    rnd = uint64(rnd >> 32n) | uint64(rnd << 32n);\n    yield uint32_to_float(uint32(rnd));\n  }\n}\n","import { CButton } from \"./CButton\";\nimport { CKnob } from \"./CKnob\";\nimport { CPort } from \"./CPort\";\nimport { CTransform } from \"./CTransform\";\nimport { ECS, Entity } from \"./ECS\";\nimport { msws } from \"./random\";\nimport { AudioNodeId, AudioParamId, RecorderNode } from \"./SAudio\";\n\nexport class SPrefabs {\n  constructor(readonly ecs: ECS) {\n    this.createToolbar();\n  }\n\n  createMaster() {\n    const device = this.createDevice(\"Master\");\n\n    const node = this.ecs.audio.createAudioDestinationNode(device);\n\n    this.createPort(device, 20, 40, {\n      name: \"spk\",\n      input: [node, 0],\n    });\n\n    return device;\n  }\n\n  createOscillator(audioRange: boolean) {\n    const device = this.createDevice(audioRange ? \"VCO\" : \"LFO\");\n\n    const node = this.ecs.audio.createOscillatorNode(device, {\n      frequency: 0,\n    });\n\n    if (audioRange) {\n      const gainNode = this.ecs.audio.createGainNode(device, {\n        gain: 55 /* convert CV to Hz */,\n      });\n      this.ecs.audio.connect([\n        [gainNode, 0],\n        [node, \"frequency\"],\n      ]);\n\n      this.createPort(device, 20, 40, {\n        name: \"freq\",\n        input: [gainNode, 0],\n      });\n    }\n\n    if (audioRange) {\n      this.createKnob(device, 70, 40, {\n        name: \"dtn\",\n        param: [node, \"detune\"],\n        min: -100,\n        max: 100,\n      });\n    } else {\n      this.createKnob(device, 70, 40, {\n        name: \"rate\",\n        param: [node, \"frequency\"],\n        min: 0,\n        max: 20,\n      });\n    }\n\n    this.createOscillatorWaveButton(device, node, \"sine\", 0, true);\n    this.createOscillatorWaveButton(device, node, \"triangle\", 1);\n    this.createOscillatorWaveButton(device, node, \"sawtooth\", 2);\n    this.createOscillatorWaveButton(device, node, \"square\", 3);\n\n    let outNode: AudioNodeId = node;\n\n    if (!audioRange) {\n      const gainNode = this.ecs.audio.createGainNode(device, { gain: 50 });\n\n      this.ecs.audio.connect([\n        [outNode, 0],\n        [gainNode, 0],\n      ]);\n      outNode = gainNode;\n\n      this.createKnob(device, 20, 40, {\n        name: \"amp\",\n        param: [gainNode, \"gain\"],\n        min: 0,\n        max: 100,\n      });\n    }\n\n    this.createPort(device, 44, 190, {\n      name: \"out\",\n      output: [outNode, 0],\n    });\n\n    return device;\n  }\n\n  createOscillatorWaveButton(\n    device: Entity,\n    node: AudioNodeId<OscillatorNode>,\n    type: OscillatorType,\n    line: number,\n    down = false\n  ) {\n    const button = this.ecs.createEntity(\"osc-waveform-\" + type);\n    this.createButton(\n      button,\n      {\n        parent: device,\n        x: 20,\n        y: 90 + 19 * line,\n        w: 80,\n        h: 20,\n      },\n      {\n        label: type,\n        toggle: true,\n        down,\n        onClick: [\n          \"prefabs\",\n          this.onOscillatorWaveButtonClick.name,\n          [device, node, type],\n        ],\n      }\n    );\n    return button;\n  }\n\n  onOscillatorWaveButtonClick(\n    device: Entity,\n    node: AudioNodeId<OscillatorNode>,\n    type: OscillatorType\n  ) {\n    this.ecs.audio.setOscillatorType(node, type);\n    for (const [entity, transform] of this.ecs.transforms) {\n      if (transform.parent === device && this.ecs.buttons.has(entity)) {\n        const button = this.ecs.buttons.get(entity)!;\n        button.down = button.label === type;\n      }\n    }\n  }\n\n  createVCO() {\n    return this.createOscillator(true);\n  }\n\n  createLFO() {\n    return this.createOscillator(false);\n  }\n\n  createNoise() {\n    const device = this.createDevice(\"Noise\");\n\n    const node = this.ecs.audio.createAudioBufferSourceNode(device, {\n      createBuffer: [\"prefabs\", this.createNoiseBuffer.name, []],\n      loop: true,\n    });\n\n    this.createPort(device, 20, 40, {\n      name: \"out\",\n      output: [node, 0],\n    });\n\n    return device;\n  }\n\n  createNoiseBuffer() {\n    const sampleRate = this.ecs.audio.sampleRate;\n    const audioBuffer = new AudioBuffer({\n      length: sampleRate,\n      sampleRate,\n      numberOfChannels: 2,\n    });\n    const channels = [\n      audioBuffer.getChannelData(0),\n      audioBuffer.getChannelData(1),\n    ];\n    const rng = msws();\n    for (let i = 0; i < audioBuffer.length; ++i) {\n      channels[0][i] = rng.next().value * 2 - 1;\n      channels[1][i] = rng.next().value * 2 - 1;\n    }\n    return audioBuffer;\n  }\n\n  createLPF() {\n    return this.createFilter(\"LPF\", \"lowpass\");\n  }\n\n  createHPF() {\n    return this.createFilter(\"HPF\", \"highpass\");\n  }\n\n  createFilter(name: string, type: BiquadFilterType) {\n    const device = this.createDevice(name);\n    const node = this.ecs.audio.createBiquadFilterNode(device, { type });\n    this.createPort(device, 45, 40, { name: \"in\", input: [node, 0] });\n    this.createPort(device, 20, 90, { name: \"fm\", input: [node, \"frequency\"] });\n    this.createKnob(device, 70, 90, {\n      name: \"freq\",\n      param: [node, \"frequency\"],\n      min: 0,\n      max: 20000,\n    });\n    this.createPort(device, 45, 140, { name: \"out\", output: [node, 0] });\n    return device;\n  }\n\n  createVCA() {\n    const device = this.createDevice(\"VCA\");\n\n    const node1 = this.ecs.audio.createGainNode(device);\n    this.createPort(device, 45, 40, { name: \"in\", input: [node1, 0] });\n    this.createPort(device, 20, 90, { name: \"mod\", input: [node1, \"gain\"] });\n    this.createKnob(device, 70, 90, {\n      name: \"gain\",\n      param: [node1, \"gain\"],\n      min: 0,\n      max: 2,\n    });\n\n    const node2 = this.ecs.audio.createGainNode(device);\n    this.ecs.audio.setParamValue([node2, \"gain\"], 1);\n    this.createPort(device, 20, 140, { name: \"out\", output: [node2, 0] });\n    this.createVCAGainButton(device, 70, 140, node2, 100);\n\n    this.ecs.audio.connect([\n      [node1, 0],\n      [node2, 0],\n    ]);\n\n    return device;\n  }\n\n  createVCAGainButton(\n    device: Entity,\n    x: number,\n    y: number,\n    node: AudioNodeId,\n    gain: number\n  ) {\n    const entity = this.ecs.createEntity(\"button\");\n    this.createButton(\n      entity,\n      {\n        parent: device,\n        x,\n        y,\n        w: 32,\n        h: 32,\n      },\n      {\n        label: \"x\" + gain,\n        toggle: true,\n        down: false,\n        onClick: [\n          \"prefabs\",\n          this.onVCAGainButtonClick.name,\n          [[node, \"gain\"], gain],\n        ],\n      }\n    );\n    return entity;\n  }\n\n  onVCAGainButtonClick(param: AudioParamId, gain: number) {\n    this.ecs.audio.setParamValue(\n      param,\n      this.ecs.audio.getParamValue(param) === 1 ? gain : 1\n    );\n  }\n\n  createPanner() {\n    const device = this.createDevice(\"Panner\");\n    const node = this.ecs.audio.createStereoPannerNode(device);\n    this.createPort(device, 20, 40, { name: \"in\", input: [node, 0] });\n    this.createKnob(device, 20, 90, {\n      name: \"pan\",\n      param: [node, \"pan\"],\n      min: -1,\n      max: 1,\n    });\n    this.createPort(device, 20, 140, { name: \"out\", output: [node, 0] });\n    return device;\n  }\n\n  createReverb() {\n    const device = this.createDevice(\"Reverb\");\n\n    const convolution = this.ecs.audio.createConvolverNode(device, [\n      \"prefabs\",\n      this.createReverbArray.name,\n      [],\n    ]);\n\n    const hpf = this.ecs.audio.createBiquadFilterNode(device, {\n      type: \"highpass\",\n      frequency: 10,\n      Q: 0,\n    });\n\n    this.ecs.audio.connect([\n      [convolution, 0],\n      [hpf, 0],\n    ]);\n\n    this.createPort(device, 20, 40, { name: \"in\", input: [convolution, 0] });\n    this.createPort(device, 20, 90, { name: \"out\", output: [hpf, 0] });\n\n    return device;\n  }\n\n  async createReverbArray() {\n    const el = document.querySelector<HTMLAudioElement>(\"audio\");\n    let audioBuffer;\n    if (el) {\n      const res = await fetch(el.src);\n      const arrayBuffer = await res.arrayBuffer();\n      audioBuffer = await this.ecs.audio.ctx.decodeAudioData(arrayBuffer);\n      if (audioBuffer.numberOfChannels > 4) {\n        const oldAudioBuffer = audioBuffer;\n        audioBuffer = new AudioBuffer({\n          length: oldAudioBuffer.length,\n          sampleRate: oldAudioBuffer.sampleRate,\n          numberOfChannels: 2,\n        });\n        const array = new Float32Array(audioBuffer.length);\n        oldAudioBuffer.copyFromChannel(array, 0);\n        audioBuffer.copyToChannel(array, 0);\n        oldAudioBuffer.copyFromChannel(array, 1);\n        audioBuffer.copyToChannel(array, 1);\n      }\n    } else {\n      const sampleRate = this.ecs.audio.sampleRate;\n      audioBuffer = new AudioBuffer({\n        length: sampleRate * 5,\n        sampleRate: sampleRate,\n        numberOfChannels: 2,\n      });\n      const channels = [\n        audioBuffer.getChannelData(1),\n        audioBuffer.getChannelData(0),\n      ];\n      const rng = msws();\n      for (let i = 0; i < audioBuffer.length; ++i) {\n        for (const samples of channels) {\n          const x = i / sampleRate;\n          const parabola = 1 - (x / 3) ** 2;\n          if (parabola > 0) {\n            let val = rng.next().value;\n            const coef = 0.95;\n            if (i > 0) val = samples[i - 1] * coef + val * (1 - coef);\n            samples[i] = parabola * val;\n          }\n        }\n      }\n    }\n    return audioBuffer;\n  }\n\n  createDelay(maxDelayTime = 10) {\n    const device = this.createDevice(\"Delay\");\n    const node = this.ecs.audio.createDelayNode(device, { maxDelayTime });\n    this.createPort(device, 20, 40, { name: \"in\", input: [node, 0] });\n    this.createKnob(device, 20, 90, {\n      name: \"val\",\n      param: [node, \"delayTime\"],\n      min: 0,\n      max: maxDelayTime,\n    });\n    this.createPort(device, 20, 140, { name: \"out\", output: [node, 0] });\n    return device;\n  }\n\n  createScope() {\n    const device = this.createDevice(\"Scope\");\n    this.ecs.transforms.set(device, { x: 0, y: 0, w: 300, h: 200 });\n    const node = this.ecs.audio.createAnalyserNode(device);\n    this.ecs.scopes.set(device, { node });\n    this.createPort(device, 10, 10, {\n      name: \"in\",\n      input: [node, 0],\n    });\n    return device;\n  }\n\n  createMIDI() {\n    const device = this.createDevice(\"MIDI in\");\n\n    const gateNode = this.ecs.midi.createGateNode(device);\n    this.ecs.prefabs.createPort(device, 20, 40, {\n      name: \"gate\",\n      output: [gateNode, 0],\n    });\n\n    const cvNode = this.ecs.midi.createCVNode(device);\n    this.ecs.prefabs.createPort(device, 70, 40, {\n      name: \"cv\",\n      output: [cvNode, 0],\n    });\n\n    return device;\n  }\n\n  createRecorder() {\n    const device = this.createDevice(\"Recorder\");\n\n    const node = this.ecs.audio.createRecorderNode(device);\n\n    this.createPort(device, 45, 40, {\n      name: \"in\",\n      input: [node, 0],\n    });\n\n    const button = this.ecs.createEntity(\"button\");\n    this.createButton(\n      button,\n      {\n        parent: device,\n        x: 10,\n        y: 90,\n        w: 100,\n        h: 20,\n      },\n      {\n        label: \"start\",\n        toggle: true,\n        down: false,\n        onClick: [\n          \"prefabs\",\n          this.onRecorderStartStopButtonClicked.name,\n          [node, button],\n        ],\n      }\n    );\n\n    return device;\n  }\n\n  onRecorderStartStopButtonClicked(\n    node: AudioNodeId<RecorderNode>,\n    button: Entity\n  ) {\n    const cbutton = this.ecs.buttons.get(button)!;\n    this.ecs.audio.record(node, cbutton.down);\n    cbutton.label = cbutton.down ? \"stop\" : \"start\";\n  }\n\n  createDevice(name: string) {\n    const getContentBox = this.getContentBox;\n    const entity = this.ecs.createEntity(name.toLowerCase());\n    this.ecs.devices.set(entity, { name });\n    this.ecs.transforms.set(entity, {\n      x: 0,\n      y: 0,\n      // FIXME the getters are replaced by their values when serialized\n      // (it works, but it could cause problems in the future)\n      get w() {\n        return getContentBox(entity, \"w\");\n      },\n      get h() {\n        return getContentBox(entity, \"h\");\n      },\n    });\n    this.ecs.pointerGrabTargets.set(entity, {});\n    this.ecs.dragAndDropTargets.add(entity);\n    return entity;\n  }\n\n  createPort<T extends AudioNode>(\n    device: Entity,\n    x: number,\n    y: number,\n    port: CPort<T>\n  ) {\n    const entity = this.ecs.createEntity(\n      device + \"-\" + port.name.toLowerCase()\n    );\n    this.ecs.transforms.set(entity, {\n      parent: device,\n      x,\n      y,\n      w: 32,\n      h: 32,\n    });\n    this.ecs.ports.set(entity, port);\n    this.ecs.pointerGrabTargets.set(entity, {});\n    return entity;\n  }\n\n  createKnob<T extends AudioNode>(\n    device: Entity,\n    x: number,\n    y: number,\n    knob: CKnob<T>\n  ) {\n    const entity = this.ecs.createEntity(\n      device + \"-\" + knob.name.toLowerCase()\n    );\n    this.ecs.transforms.set(entity, {\n      parent: device,\n      x,\n      y,\n      w: 32,\n      h: 32,\n    });\n    this.ecs.knobs.set(entity, knob);\n    this.ecs.pointerGrabTargets.set(entity, {});\n    return entity;\n  }\n\n  createButton(entity: Entity, transform: CTransform, button: CButton) {\n    this.ecs.transforms.set(entity, transform);\n    this.ecs.pointerGrabTargets.set(entity, {});\n    this.ecs.buttons.set(entity, button);\n  }\n\n  createToolbar() {\n    let spot = 0;\n    const self = this;\n    const nextPosition = () => ({\n      get x() {\n        return self.ecs.display.canvas.width - 110;\n      },\n      y: 10 + 20 * spot++,\n      w: 100,\n      h: 20,\n    });\n\n    this.createNewProjectButton(nextPosition());\n    spot += 0.5;\n    this.createSpawnButton(\"Master\", nextPosition());\n    this.createSpawnButton(\"MIDI\", nextPosition());\n    this.createSpawnButton(\"Recorder\", nextPosition());\n    spot += 0.5;\n    this.createSpawnButton(\"VCO\", nextPosition());\n    this.createSpawnButton(\"LFO\", nextPosition());\n    spot += 0.5;\n    this.createSpawnButton(\"Noise\", nextPosition());\n    spot += 0.5;\n    this.createSpawnButton(\"LPF\", nextPosition());\n    this.createSpawnButton(\"HPF\", nextPosition());\n    this.createSpawnButton(\"Delay\", nextPosition());\n    this.createSpawnButton(\"Panner\", nextPosition());\n    this.createSpawnButton(\"Reverb\", nextPosition());\n    spot += 0.5;\n    this.createSpawnButton(\"VCA\", nextPosition());\n    spot += 0.5;\n    this.createSpawnButton(\"Scope\", nextPosition());\n  }\n\n  createNewProjectButton(transform: CTransform) {\n    const entity = this.ecs.createEntity(\"button\");\n    this.createButton(entity, transform, {\n      label: \"New Project\",\n      toggle: false,\n      down: false,\n      onClick: [\"prefabs\", this.onNewProjectButtonClick.name, []],\n    });\n    return entity;\n  }\n\n  onNewProjectButtonClick() {\n    localStorage.clear();\n    location.reload();\n  }\n\n  createSpawnButton(name: string, transform: CTransform) {\n    const entity = this.ecs.createEntity(\"button\");\n    this.createButton(entity, transform, {\n      label: name,\n      toggle: false,\n      down: false,\n      onClick: [\"prefabs\", this.onSpawnButtonClick.name, [entity, name]],\n    });\n    return entity;\n  }\n\n  onSpawnButtonClick(entity: Entity, type: string) {\n    const key = (\"create\" + type) as keyof this;\n    const spawn = ((this[key] as unknown) as () => Entity).bind(this);\n    const spawnedEntity = spawn();\n    const transform = this.ecs.transforms.get(spawnedEntity)!;\n    const buttonGrabTarget = this.ecs.pointerGrabTargets.get(entity)!;\n    const spawnedGrabTarget = this.ecs.pointerGrabTargets.get(spawnedEntity)!;\n    spawnedGrabTarget.grabbed = {\n      pointer: buttonGrabTarget.grabbed!.pointer,\n      dx: -transform.w / 2,\n      dy: -transform.h / 4,\n    };\n    delete buttonGrabTarget.grabbed;\n  }\n\n  getContentBox = (entity: Entity, size: \"w\" | \"h\") => {\n    const position = size === \"w\" ? \"x\" : \"y\";\n    const children = [...this.ecs.transforms.values()].filter(\n      (t) => t.parent === entity\n    );\n    const margin = Math.min(...children.map((t) => t.x));\n    const dimension = Math.max(...children.map((t) => t[position] + t[size]));\n    return dimension + margin;\n  };\n}\n","import { ECS } from \"./ECS\";\nimport { IRenderable } from \"./IRenderable\";\n\nexport class SScopeRenderer implements IRenderable {\n  constructor(readonly ecs: ECS) {}\n\n  render() {\n    const ctx = this.ecs.display.ctx;\n    ctx.fillStyle = \"black\";\n    ctx.strokeStyle = \"red\";\n    ctx.lineWidth = 3;\n    for (const [entity, scope] of this.ecs.scopes) {\n      const transform = this.ecs.display.getWorldTransform(entity);\n      ctx.save();\n      ctx.translate(transform.x, transform.y + transform.h / 2);\n      ctx.scale(1, -1);\n      ctx.fillRect(0, -transform.h / 2, transform.w, transform.h);\n\n      const size = this.ecs.audio.getAnalyserFrequencyBinCount(scope.node);\n      const buffer = new Float32Array(size);\n      this.ecs.audio.getAnalyserFloatTimeDomainData(scope.node, buffer);\n\n      const zx = buffer.findIndex((sample) => ((sample * 100) | 0) === 0);\n      const ox = buffer.findIndex(\n        (sample, x) => x > zx && ((sample * 100) | 0) > 0\n      );\n\n      ctx.beginPath();\n      for (let x = 0; x < buffer.length; ++x) {\n        ctx.lineTo(\n          (x++ * transform.w) / buffer.length,\n          buffer[(ox + x) % buffer.length] * (transform.h / 2)\n        );\n      }\n      ctx.stroke();\n\n      ctx.restore();\n    }\n  }\n}\n","import { intersection, CTransform } from \"./CTransform\";\nimport { ECS, Entity, EntityComponentMap, EntitySet } from \"./ECS\";\nimport { IUpdatable } from \"./IUpdatable\";\n\nexport default class STrash implements IUpdatable {\n  constructor(readonly ecs: ECS) {\n    const entity = this.ecs.createEntity(\"trashcan\");\n    ecs.transforms.set(entity, {\n      get x() {\n        return (ecs.display.canvas.width - 50) / 2;\n      },\n      get y() {\n        return ecs.display.canvas.height - 75;\n      },\n      w: 50,\n      h: 50,\n    });\n    ecs.trashcans.set(entity, {\n      visible: false,\n      active: false,\n    });\n  }\n\n  update() {\n    let deviceGrabbed = false;\n    for (const [entity] of this.ecs.devices) {\n      if (this.ecs.pointerGrabTargets.get(entity)!.grabbed) {\n        deviceGrabbed = true;\n        break;\n      }\n    }\n\n    for (const [entity, trashcan] of this.ecs.trashcans) {\n      const transform = this.ecs.transforms.get(entity)!;\n      trashcan.visible = deviceGrabbed;\n      const wasActive = trashcan.active;\n      trashcan.active = false;\n      for (const [entity2] of this.ecs.devices) {\n        const transform2 = this.ecs.transforms.get(entity2)!;\n        const overlap = intersection(transform, transform2);\n        const grabbed = this.ecs.pointerGrabTargets.get(entity2)!.grabbed;\n        if (overlap && grabbed) {\n          trashcan.active = overlap;\n        } else if (wasActive && overlap) {\n          this.deleteDevice(entity2);\n        }\n      }\n    }\n  }\n\n  deleteDevice(entity: Entity) {\n    let count = 0;\n    const trash = new Set([entity]);\n    while (trash.size !== count) {\n      count = trash.size;\n      for (const [entity, { parent }] of this.ecs.transforms) {\n        if (parent && trash.has(parent)) {\n          trash.add(entity);\n        }\n      }\n    }\n\n    for (const [entity, wire] of this.ecs.wires) {\n      if (trash.has(wire.source) || trash.has(wire.destination)) {\n        trash.add(entity);\n      }\n    }\n\n    for (const entity of trash) {\n      if (this.ecs.devices.has(entity)) {\n        this.ecs.audio.deleteDevice(entity);\n        this.ecs.midi.deleteDevice(entity);\n      }\n\n      for (const v of Object.values(this.ecs)) {\n        if (v instanceof EntitySet || v instanceof EntityComponentMap) {\n          v.delete(entity);\n        }\n      }\n    }\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { IRenderable } from \"./IRenderable\";\n\nexport default class STrashcanRenderer implements IRenderable {\n  constructor(readonly ecs: ECS) {}\n\n  render() {\n    const { ctx } = this.ecs.display;\n    for (const [entity, trashcan] of this.ecs.trashcans) {\n      if (!trashcan.visible) continue;\n      const { x, y, w, h } = this.ecs.transforms.get(entity)!;\n      ctx.strokeStyle = trashcan.active\n        ? \"hsla(0deg, 100%, 50%, .5)\"\n        : \"hsla(0deg, 0%, 50%, .5)\";\n      ctx.lineWidth = trashcan.active ? 5 : 2;\n      ctx.beginPath();\n      ctx.moveTo(x - w / 2, y - h / 2);\n      ctx.lineTo(x + w / 2, y + h / 2);\n      ctx.moveTo(x + w / 2, y - h / 2);\n      ctx.lineTo(x - w / 2, y + h / 2);\n      ctx.closePath();\n      ctx.stroke();\n    }\n  }\n}\n","import { CWire } from \"./CWire\";\nimport { ECS, Entity } from \"./ECS\";\nimport { IUpdatable } from \"./IUpdatable\";\n\nexport class SWireManager implements IUpdatable {\n  constructor(readonly ecs: ECS) {}\n\n  update() {\n    for (const [grabbedEntity, grabTarget] of this.ecs.pointerGrabTargets) {\n      if (grabTarget.grabbed && this.ecs.ports.has(grabbedEntity)) {\n        // create a draggable wire from a port or delete an existing one\n        this.deleteWireIfExists(grabbedEntity, grabTarget.grabbed.pointer) ||\n          this.createDraggableWire(grabbedEntity, grabTarget.grabbed.pointer);\n        delete grabTarget.grabbed;\n      } else if (!grabTarget.grabbed && this.ecs.wires.has(grabbedEntity)) {\n        // connect a wire if dropped on a compatible port\n        this.dropWire(grabbedEntity);\n      }\n    }\n  }\n\n  deleteWireIfExists(grabbedEntity: Entity, pointer: Entity) {\n    for (const [wireEntity, wire] of this.ecs.wires) {\n      if (wire.source === grabbedEntity || wire.destination === grabbedEntity) {\n        this.disconnect(wire);\n        this.ecs.wires.delete(wireEntity);\n        this.ecs.pointerGrabber.cancelGrab(pointer);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  createDraggableWire(grabbedEntity: Entity, pointer: Entity) {\n    const wire = this.ecs.createEntity(\"wire\");\n    this.ecs.wires.set(wire, {\n      source: grabbedEntity,\n      destination: pointer,\n      hue: Math.random(),\n    });\n    this.ecs.pointerGrabTargets.set(wire, {\n      grabbed: {\n        pointer,\n        dx: 0,\n        dy: 0,\n      },\n    });\n  }\n\n  dropWire(grabbedEntity: Entity) {\n    const wire = this.ecs.wires.get(grabbedEntity)!;\n    const transform = this.ecs.transforms.get(wire.destination)!;\n    const target = this.ecs.mouseInput.findTargetEntity(transform);\n    let connected = false;\n    if (target && this.ecs.ports.has(target)) {\n      wire.destination = target;\n      connected = this.connect(wire);\n    }\n    if (!connected) {\n      this.ecs.wires.delete(grabbedEntity);\n    }\n    this.ecs.pointerGrabTargets.delete(grabbedEntity);\n  }\n\n  connect(wire: CWire, connect = true) {\n    let sourcePort = this.ecs.ports.get(wire.source);\n    let destinationPort = this.ecs.ports.get(wire.destination);\n\n    if (!sourcePort || !destinationPort) {\n      return false;\n    }\n\n    if (sourcePort.output === undefined) {\n      const tmp = sourcePort;\n      sourcePort = destinationPort;\n      destinationPort = tmp;\n    }\n\n    if (\n      sourcePort.output === undefined ||\n      destinationPort.input === undefined\n    ) {\n      return false;\n    }\n\n    this.ecs.audio.connect([sourcePort.output, destinationPort.input], connect);\n\n    return true;\n  }\n\n  disconnect(wire: CWire) {\n    this.connect(wire, false);\n  }\n}\n","import { ECS } from \"./ECS\";\nimport { IRenderable } from \"./IRenderable\";\n\nexport class SWireRenderer implements IRenderable {\n  constructor(readonly ecs: ECS) {}\n\n  render() {\n    const ctx = this.ecs.display.ctx;\n    ctx.lineWidth = 10;\n    ctx.lineCap = \"round\";\n    for (const [entity, wire] of this.ecs.wires) {\n      const source = this.ecs.display.getWorldTransform(wire.source);\n      const destination = this.ecs.display.getWorldTransform(wire.destination);\n      ctx.beginPath();\n      ctx.moveTo(source.x + source.w / 2, source.y + source.h * 0.8);\n      ctx.bezierCurveTo(\n        source.x + source.w / 2,\n        source.y + source.h * 0.8 + 100,\n        destination.x + destination.w / 2,\n        destination.y + destination.h * 0.8 + 100,\n        destination.x + destination.w / 2,\n        destination.y + destination.h * 0.8\n      );\n      ctx.strokeStyle =\n        \"hsla(\" + ((wire.hue * 6) | 0) * 60 + \"deg, 100%, 70%, .5)\";\n      ctx.stroke();\n    }\n  }\n}\n","import { CButton } from \"./CButton\";\nimport { CDevice } from \"./CDevice\";\nimport { CKnob } from \"./CKnob\";\nimport { CKnobDragZone } from \"./CKnobDragZone\";\nimport { CPointer } from \"./CPointer\";\nimport { CPointerGrabTarget } from \"./CPointerGrabTarget\";\nimport { CPort } from \"./CPort\";\nimport { CScope } from \"./CScope\";\nimport { CTransform } from \"./CTransform\";\nimport { CTrashcan } from \"./CTrashcan\";\nimport { CWire } from \"./CWire\";\nimport { SAudio } from \"./SAudio\";\nimport { SAutosave } from \"./SAutosave\";\nimport { SButtonClicker } from \"./SButtonClicker\";\nimport { SButtonRenderer } from \"./SButtonRenderer\";\nimport { SDeviceRenderer } from \"./SDeviceRenderer\";\nimport { SDeviceSaver } from \"./SDeviceSaver\";\nimport { SDisplay } from \"./SDisplay\";\nimport { SDragAndDrop } from \"./SDragAndDrop\";\nimport { SKnobManager } from \"./SKnobManager\";\nimport { SKnobRenderer } from \"./SKnobRenderer\";\nimport { SMidi } from \"./SMidi\";\nimport { SMouseInput } from \"./SMouseInput\";\nimport { SPointerGrabber } from \"./SPointerGrabber\";\nimport { SPortRenderer } from \"./SPortRenderer\";\nimport { SPrefabs } from \"./SPrefabs\";\nimport { SScopeRenderer } from \"./SScopeRenderer\";\nimport STrash from \"./STrash\";\nimport STrashcanRenderer from \"./STrashcanRenderer\";\nimport { SWireManager } from \"./SWireManager\";\nimport { SWireRenderer } from \"./SWireRenderer\";\n\nexport type Entity = string & { __tag: \"Entity\" };\nexport class EntitySet extends Set<Entity> {}\nexport class EntityComponentMap<C> extends Map<Entity, C> {}\nexport type SystemCallback<T = unknown> = [keyof ECS, string, any[]];\n\nexport class ECS {\n  createEntity(name: string) {\n    return (name + \"-\" + Math.random().toString(16).slice(2, 6)) as Entity;\n  }\n\n  invokeCallback<T>([systemName, methodName, args]: SystemCallback<T>): T {\n    const system = this[systemName];\n    const method = system[methodName as keyof typeof system] as Function;\n    return method.apply(system, args);\n  }\n\n  transforms = new EntityComponentMap<CTransform>();\n  devices = new EntityComponentMap<CDevice>();\n  ports = new EntityComponentMap<CPort<AudioNode>>();\n  knobs = new EntityComponentMap<CKnob<AudioNode>>();\n  wires = new EntityComponentMap<CWire>();\n  pointers = new EntityComponentMap<CPointer>();\n  pointerGrabTargets = new EntityComponentMap<CPointerGrabTarget>();\n  dragAndDropTargets = new EntitySet();\n  knobDragZones = new EntityComponentMap<CKnobDragZone>();\n  buttons = new EntityComponentMap<CButton>();\n  scopes = new EntityComponentMap<CScope>();\n  trashcans = new EntityComponentMap<CTrashcan>();\n\n  prefabs = new SPrefabs(this);\n  audio = new SAudio(this);\n  display = new SDisplay(this);\n  mouseInput = new SMouseInput(this);\n  pointerGrabber = new SPointerGrabber(this);\n  buttonClicker = new SButtonClicker(this);\n  dragAndDrop = new SDragAndDrop(this);\n  deviceSaver = new SDeviceSaver(this);\n  wireManager = new SWireManager(this);\n  knobManager = new SKnobManager(this);\n  midi = new SMidi(this);\n  autosave = new SAutosave(this);\n  trash = new STrash(this);\n  // debugRenderer = new SDebugRenderer(this);\n  scopeRenderer = new SScopeRenderer(this);\n  deviceRenderer = new SDeviceRenderer(this);\n  portRenderer = new SPortRenderer(this);\n  knobRenderer = new SKnobRenderer(this);\n  buttonRenderer = new SButtonRenderer(this);\n  wireRenderer = new SWireRenderer(this);\n  trashRenderer = new STrashcanRenderer(this);\n}\n","import { ECS } from \"./ECS\";\n\nconst ecs = new ECS();\nObject.assign(window, { ecs });\n"]}